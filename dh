#!/usr/bin/env ruby

class Source
  FUNCTIONS = %w{import}
  HIGHLIGHTS = {
    'erb' => 'html',
    'rb'  => 'ruby'
  }

  def initialize(source)
    @source = source
  end

  def import(filename)
    filename = @root_dir + '/' + filename if @root_dir
    syntax = HIGHLIGHTS[File.extname(filename).gsub(".",'')]
    puts "importing #{filename} #{syntax && "with syntax: #{syntax}"}"

    source = syntax ? "#{@indent}:::#{syntax}\n" : ''
    source << File.read(filename).lines.map { |l| @indent.to_s + l }.join

    Source.new(source).to_devcenter(File.dirname(filename)) #recursion FTW
  end

  def to_devcenter(root_dir = nil)
    @root_dir = root_dir
    @source.dup.tap do |output|
      FUNCTIONS.each do |f| 
        function_call = /( *)\!#{f}\(([^\)]+)\)/
        output.gsub!(function_call) do |token|
          matchdata = token.match(function_call)
          @indent = matchdata[1]
          send(f, *matchdata[2].split(','))
        end
      end
    end
  end
end

puts Source.new(File.read(ARGV[0])).to_devcenter
